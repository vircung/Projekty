/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nakonieczny.jacek.MVC.widok;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import nakonieczny.jacek.MVC.dane.Lamana;
import nakonieczny.jacek.MVC.dane.Punkt;

/**
 *
 * @author student
 */
public class LamanaPanel extends javax.swing.JPanel {

    private Lamana lam;

    public void setLam(Lamana lam) {
        this.lam = lam;
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        g.drawString("Panel Lamanej", 10, 10);
        if (lam != null) {
            Punkt[] pkt = lam.punkty();
            drawLines(pkt, g);
            drawPoints(g, pkt);
        }
    }

    public LamanaPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        /*    int x,y;
         x= evt.getX();
         y= evt.getY();
         System.out.println("Move "+x+","+y); */
    }//GEN-LAST:event_formMouseMoved

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            //System.out.println("prawy guzik myszy");
            int x, y;
            x = evt.getX();
            y = evt.getY();
            lam.dodajPunkt(new Punkt(x, y));
            this.repaint();
        }
    }//GEN-LAST:event_formMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void drawPoints(Graphics g, Punkt[] pkt) {
        g.setColor(Color.RED);
        for (int i = 0; i < pkt.length; i++) {
            g.fillOval(pkt[i].getX() - 3, pkt[i].getY() - 3, 7, 7);
        }
    }

    public void drawLines(Punkt[] pkt, Graphics g) {
        g.setColor(Color.BLACK);
        for (int i = 0; i < pkt.length - 1; i++) {
            g.drawLine(pkt[i].getX(), pkt[i].getY(), pkt[i + 1].getX(), pkt[i + 1].getY());
        }
    }
}
